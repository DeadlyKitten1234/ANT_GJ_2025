# (this file was generated by chat gpt)
# if you change it, you have to run:
#	  `cmake -DCMAKE_BUILD_TYPE=Debug -B./build -S.`

# CMake minimum version required
cmake_minimum_required(VERSION 3.18)

# Project name
project(ANT_GJ_2025 VERSION 1.0 LANGUAGES CXX)

# Set C++ standard to C++23
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

# Set compiling options
set(CMAKE_COLOR_DIAGNOSTICS 1)

# Specify the source files
set(SOURCES
    ./main.cpp
	./src/Drawable.cpp
	./src/Globals.cpp
	./src/InputManager.cpp
	./src/Presenter.cpp
	./src/World.cpp
	./src/ConfigManager.cpp
	./src/Cinematic.cpp
)

# Additional include directories
include_directories(${CMAKE_SOURCE_DIR}/include D:/Tools/msys/ucrt64/include/SDL2)

# Set the output directory for executables
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/run)

# Export compile_commands.json
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

# Define the executable to be built
add_executable(${PROJECT_NAME} ${SOURCES})

target_link_libraries(${PROJECT_NAME} SDL2 SDL2main SDL2_mixer SDL2_ttf)

# Optionally, add specific settings for Debug/Release configurations
target_compile_options(${PROJECT_NAME} PRIVATE
    $<$<CONFIG:Debug>:
			#-Weverything
			#-Wno-c++98-compat
			#-Wno-c++11-compat
			#-Wno-c++14-compat
			#-Wno-c++17-compat
			#-Wno-c++20-compat
			##-Wno-c++23-compat
			#-Wno-c++98-compat-pedantic
			#-Wno-c++11-compat-pedantic
			#-Wno-c++14-compat-pedantic
			#-Wno-c++17-compat-pedantic
			#-Wno-c++20-compat-pedantic
			##-Wno-c++23-compat-pedantic
			#-Wno-pre-c++14-compat
			#-Wno-pre-c++17-compat
			#-Wno-pre-c++20-compat
         #-Wno-padded
			#-Wno-pre-c++23-compat
			#-Werror
			-Wno-c++11-narrowing
		>
    $<$<CONFIG:Release>:

		>
)

# Optionally, set install rules if needed (uncomment to use)
install(TARGETS ${PROJECT_NAME} DESTINATION bin)
